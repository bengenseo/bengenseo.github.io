[{"title":"WinToGo","date":"2024-07-12T11:41:18.051Z","path":"posts/17362e1a.html","text":"WinToGo部署制作 硬盘设置","tags":[]},{"title":"hello-world","date":"2024-07-12T11:41:18.051Z","path":"posts/4a17b156.html","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"pycharm主题配置","date":"2024-07-12T11:41:18.051Z","path":"posts/a15a1289.html","text":"pycharm主题配置Django颜色高亮 Django代码块 12345678910111213141516171819202122232425262728293031323334&#123;% load static %&#125;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;&#123;% block title %&#125;&#123;&#123; title &#125;&#125;&#123;% endblock %&#125;&lt;/title&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&#123;% block keywords %&#125;&#123;&#123; keywords &#125;&#125;&#123;% endblock %&#125;&quot;/&gt; &lt;meta name=&quot;description&quot; content=&quot;&#123;% block description %&#125;&#123;&#123; description &#125;&#125;&#123;% endblock %&#125;&quot;/&gt; &lt;meta property=&quot;og:url&quot; content=&quot;&quot;/&gt; &lt;meta property=&quot;og:image&quot; content=&quot;logo.png&quot;/&gt; &lt;meta property=&quot;og:site_name&quot; content=&quot;&quot;/&gt; &lt;meta property=&quot;og:title&quot; content=&quot;&quot;/&gt; &lt;meta property=&quot;og:description&quot; content=&quot;&quot;/&gt; &lt;meta name=&quot;generator&quot; content=&quot;pycharm&quot;/&gt; &lt;meta name=&quot;copyright&quot; content=&quot;本站版权 Www.bengenseo.com 冰洁个人博客所有 All Rights Reserved&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123;request.build_absolute_uri&#125;&#125;&#123;% static &#x27;&#x27; %&#125;&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123;request.build_absolute_uri&#125;&#125;&#123;% static &#x27;&#x27; %&#125;&quot;&gt; &lt;link rel=&quot;shortcut icon&quot; href=&quot;&#123;% static &#x27;favicon.ico&#x27; %&#125;&quot;&gt; &lt;script src=&quot;&#123;&#123;request.build_absolute_uri&#125;&#125;&#123;% static &#x27;&#x27; %&#125;&quot;&gt;&lt;/script&gt; &lt;script src=&quot;&#123;&#123;request.build_absolute_uri&#125;&#125;&#123;% static &#x27;&#x27; %&#125;&quot;&gt;&lt;/script&gt; &#123;% block css %&#125; &#123;% endblock %&#125;&lt;/head&gt;&lt;body&gt;&#123;% block header %&#125;&#123;% include &#x27;header.htm&#x27; %&#125;&#123;% endblock %&#125;&#123;% block body %&#125;$END$&#123;% endblock %&#125;&#123;% block footer %&#125;&#123;% include &#x27;footer.htm&#x27; %&#125;&#123;% endblock %&#125;&#123;% block js %&#125;&#123;% endblock %&#125;&lt;/body&gt;&lt;/html&gt; 123456789101112131415161718192021222324252627282930313233343536373839&#123;% $END$ %&#125;&#123;% extends &quot;basic.html&quot; %&#125;&#123;% block body %&#125;$END$&#123;% endblock %&#125;&#123;% block css %&#125;$END$&#123;% endblock %&#125;&#123;% block description %&#125;$END$&#123;% endblock %&#125;&#123;% block footer %&#125;$END$&#123;% endblock %&#125;&#123;% block header %&#125;$END$&#123;% endblock %&#125;&#123;% include &#x27;$END$&#x27; %&#125;&#123;% block js %&#125;$END$&#123;% endblock %&#125;&#123;% block keywords %&#125;$END$&#123;% endblock %&#125;&#123;% spaceless %&#125;去除html空白符$END$&#123;% endspaceless %&#125;&#123;% static &#x27;$END$&#x27; %&#125;&#123;% block title %&#125;$END$&#123;% endblock %&#125;&#123;% csrf_token %&#125;&#123;&#123;request.build_absolute_uri&#125;&#125; 1234567891011121314151617181920212223&#123;% extends &quot;basic.html&quot; %&#125;&#123;% load static %&#125;&#123;% block title %&#125;&#123;% endblock %&#125;&#123;% block keywords %&#125;&#123;% endblock %&#125;&#123;% block description %&#125;&#123;% endblock %&#125;&#123;% block css %&#125;&#123;% endblock %&#125;&#123;% block body %&#125;$END$&#123;% endblock %&#125;&#123;% block footer %&#125;&#123;% endblock %&#125;&#123;% block js %&#125;&#123;% endblock %&#125; HTML颜色高亮","tags":[]},{"title":"pycharm快捷键","date":"2024-07-12T11:41:18.051Z","path":"posts/677a85a1.html","text":"pycharm快捷键文件对齐格式化 Ctrl+Alt+L 快速选中代码 Ctrl+W 快速导入模块,快速纠正 需要开启最高代码提示等级 Alt + Enter 复制当前行 Ctrl + D 删除当前行 Ctrl+Y","tags":[]},{"title":"Pycharm连接Docker","date":"2024-07-12T11:41:18.051Z","path":"posts/65a25018.html","text":"Pycharm连接Docker手动 路径&#x2F;etc&#x2F;docker&#x2F;daemon.json 12345678910&#123; &quot;registry-mirrors&quot;: [ &quot;https://idsc5w8g.mirror.aliyuncs.com&quot;, &quot;https://docker.mirrors.ustc.edu.cn&quot;, &quot;https://registry.docker-cn.com&quot;, &quot;https://hub-mirror.c.163.com&quot;, &quot;https://mirror.ccs.tencentyun.com&quot;, &quot;https://reg-mirror.qiniu.com&quot; ]&#125; 重启docker 12systemctl daemon-reloadsystemctl restart docker 指令1sudo mkdir -p /etc/docker 12345678sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;&#123; &quot;registry-mirrors&quot;: [ &quot;https://t57hdrx1.mirror.aliyuncs.com&quot;, &quot;http://f1361db2.m.daocloud.io&quot; ]&#125;EOF 12systemctl daemon-reloadsystemctl restart docker 修改TAG版本12docker tag bengenseo/os7py9:&lt;none&gt; bengenseo/os7py9:1.0docker tag boiler:1.0 boiler:latest 更新1yum update 配置SSH 路径&#x2F;etc&#x2F;ssh&#x2F;sshd_config 12#开启账号密码登陆PermitRootLogin yes 命令,修改密码 1passwd root 密码root 重启SSH 1service sshd start 本地windows电脑测试 cmd.exe 1ssh root@192.168.200.100","tags":[]},{"title":"HEXO自动化部署到Github博客","date":"2024-07-12T11:41:18.051Z","path":"posts/d8bc67fb.html","text":"HEXO自动化部署到Github博客配置SSH123git config --global user.name &quot;bengenseo&quot;git config --global user.email &quot;bengenseo@126.com&quot;ssh-keygen -t rsa -C &quot;bengenseo@126.com&quot; 空值 三次回车1ssh -T git@github.com 输入 yesWarning: Permanently added ‘github.com’ (ED25519) to the list of known hosts.Hi bengenseo! You’ve successfully authenticated, but GitHub does not provide shell access.警告：已将“github.com”（ED25519）永久添加到已知主机列表中。嗨 bengenseo！您已成功通过身份验证，但 GitHub 不提供 shell 访问权限。 1ssh-keygen -t rsa -b 4096 -C &quot;bengenseo@126.com&quot; 插件123456npm install gulpnpm install gulpfilenpm install gulp-clean-cssnpm install gulp-uglifynpm install gulp-concatnpm install hexo-cli -g .github下创建workflows文件夹auto.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263name: 自动部署# 当有改动推送到master分支时，启动Actionon: push: branches: - main #2020年10月后github新建仓库默认分支改为main，注意更改 release: types: - publishedjobs: deploy: runs-on: ubuntu-latest steps: - name: 检查分支 uses: actions/checkout@v2 with: ref: main - name: 安装 Node uses: actions/setup-node@v1 with: node-version: &quot;20.x&quot; - name: 安装 Hexo run: | export TZ=&#x27;Asia/Shanghai&#x27; npm install hexo-cli -g - name: 缓存 Hexo id: cache-npm uses: actions/cache@v3 env: cache-name: cache-node-modules with: path: node_modules key: $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-$&#123;&#123; hashFiles(&#x27;**/package-lock.json&#x27;) &#125;&#125; restore-keys: | $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;- $&#123;&#123; runner.os &#125;&#125;-build- $&#123;&#123; runner.os &#125;&#125;- - name: 安装依赖 if: $&#123;&#123; steps.cache-npm.outputs.cache-hit != &#x27;true&#x27; &#125;&#125; run: | npm install gulp-cli -g #全局安装gulp npm install --save - name: 生成静态文件 run: | hexo clean hexo generate gulp - name: 部署到Github uses: JamesIves/github-pages-deploy-action@v4 with: token: $&#123;&#123; secrets.ACTIONS_DEPLOY_KEY &#125;&#125; repository-name: bengenseo/bengenseo.github.io branch: main folder: public commit-message: &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; Updated By Github Actions&quot; 创建gulpfile.js12345678910111213141516171819202122232425262728293031323334353637const &#123; src, dest, series &#125; = require(&#x27;gulp&#x27;);const cleanCSS = require(&#x27;gulp-clean-css&#x27;);const uglify = require(&#x27;gulp-uglify&#x27;);const concat = require(&#x27;gulp-concat&#x27;);const fs = require(&#x27;fs&#x27;);// Minify CSS filesfunction minifyCSS() &#123; if (fs.existsSync(&#x27;source/css&#x27;) &amp;&amp; fs.readdirSync(&#x27;source/css&#x27;).length &gt; 0) &#123; return src(&#x27;source/css/*.css&#x27;) .pipe(cleanCSS()) .pipe(dest(&#x27;public/css&#x27;)); &#125; else &#123; return new Promise((resolve) =&gt; &#123; console.log(&#x27;No CSS files to minify.&#x27;); resolve(); &#125;); &#125;&#125;// Minify JS filesfunction minifyJS() &#123; if (fs.existsSync(&#x27;source/js&#x27;) &amp;&amp; fs.readdirSync(&#x27;source/js&#x27;).length &gt; 0) &#123; return src(&#x27;source/js/*.js&#x27;) .pipe(uglify()) .pipe(dest(&#x27;public/js&#x27;)); &#125; else &#123; return new Promise((resolve) =&gt; &#123; console.log(&#x27;No JS files to minify.&#x27;); resolve(); &#125;); &#125;&#125;// Default taskexports.default = series(minifyCSS, minifyJS); 创建CNAME1blog.sjooo.sbs themes&#x2F;主题&#x2F;创建.gitkeep.gitkeep12mkdir -p themes/*touch themes/*/.gitkeep JSON搜索文件其它插件12npm install hexo-generator-json-content --savenpm install hexo-generator-feed --save 根目录&#x2F;_config.yml1234567891011121314151617181920212223242526272829#JSON搜索文件jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true#RSS订阅feed: type: atom path: atom.xml limit: hub: content: content_limit: content_limit_delim: &#x27; &#x27; order_by: -date 链接配置插件1npm install hexo-abbrlink --save _config.yml1234abbrlink: alg: crc32 # 算法，可选 crc16 和 crc32 rep: hex # 生成的链接形式，可选 dec 和 hexpermalink: posts/:abbrlink.html 创建项目-空文件夹中运行12hexo initnpm install hexo-deployer-git --save 1hexo d -g 运行程序123hexo clhexo ghexo s 第一次123456789hexo clhexo ggit initgit remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add .git commit -m &quot;github action update&quot;git push origin main 出错1234git pull origin maingit add .git commit -m &quot;Merge remote changes&quot;git push origin main 第二次123456git remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add *git commit -m &quot;github action update&quot;git push origin main 强制推送12345678hexo clhexo ggit remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add *git commit -m &quot;github action update&quot;git push origin main --force","tags":[]},{"title":"自动化部署博客","date":"2024-07-12T11:41:18.051Z","path":"posts/1ecbfe90.html","text":"自动化部署博客配置SSH123git config --global user.name &quot;bengenseo&quot;git config --global user.email &quot;bengenseo@126.com&quot;ssh-keygen -t rsa -C &quot;bengenseo@126.com&quot; 空值 三次回车1ssh -T git@github.com 输入 yesWarning: Permanently added ‘github.com’ (ED25519) to the list of known hosts.Hi bengenseo! You’ve successfully authenticated, but GitHub does not provide shell access.警告：已将“github.com”（ED25519）永久添加到已知主机列表中。嗨 bengenseo！您已成功通过身份验证，但 GitHub 不提供 shell 访问权限。 1ssh-keygen -t rsa -b 4096 -C &quot;bengenseo@126.com&quot; 插件12345npm install gulpnpm install gulpfilenpm install gulp-clean-cssnpm install gulp-uglifynpm install gulp-concat .github下创建workflows文件夹auto.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263name: 自动部署# 当有改动推送到master分支时，启动Actionon: push: branches: - main #2020年10月后github新建仓库默认分支改为main，注意更改 release: types: - publishedjobs: deploy: runs-on: ubuntu-latest steps: - name: 检查分支 uses: actions/checkout@v2 with: ref: main - name: 安装 Node uses: actions/setup-node@v1 with: node-version: &quot;20.x&quot; - name: 安装 Hexo run: | export TZ=&#x27;Asia/Shanghai&#x27; npm install hexo-cli -g - name: 缓存 Hexo id: cache-npm uses: actions/cache@v3 env: cache-name: cache-node-modules with: path: node_modules key: $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-$&#123;&#123; hashFiles(&#x27;**/package-lock.json&#x27;) &#125;&#125; restore-keys: | $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;- $&#123;&#123; runner.os &#125;&#125;-build- $&#123;&#123; runner.os &#125;&#125;- - name: 安装依赖 if: $&#123;&#123; steps.cache-npm.outputs.cache-hit != &#x27;true&#x27; &#125;&#125; run: | npm install gulp-cli -g #全局安装gulp npm install --save - name: 生成静态文件 run: | hexo clean hexo generate gulp - name: 部署到Github uses: JamesIves/github-pages-deploy-action@v4 with: token: $&#123;&#123; secrets.ACTIONS_DEPLOY_KEY &#125;&#125; repository-name: bengenseo/bengenseo.github.io branch: main folder: public commit-message: &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; Updated By Github Actions&quot; 创建gulpfile.js12345678910111213141516171819202122232425262728293031323334353637const &#123; src, dest, series &#125; = require(&#x27;gulp&#x27;);const cleanCSS = require(&#x27;gulp-clean-css&#x27;);const uglify = require(&#x27;gulp-uglify&#x27;);const concat = require(&#x27;gulp-concat&#x27;);const fs = require(&#x27;fs&#x27;);// Minify CSS filesfunction minifyCSS() &#123; if (fs.existsSync(&#x27;source/css&#x27;) &amp;&amp; fs.readdirSync(&#x27;source/css&#x27;).length &gt; 0) &#123; return src(&#x27;source/css/*.css&#x27;) .pipe(cleanCSS()) .pipe(dest(&#x27;public/css&#x27;)); &#125; else &#123; return new Promise((resolve) =&gt; &#123; console.log(&#x27;No CSS files to minify.&#x27;); resolve(); &#125;); &#125;&#125;// Minify JS filesfunction minifyJS() &#123; if (fs.existsSync(&#x27;source/js&#x27;) &amp;&amp; fs.readdirSync(&#x27;source/js&#x27;).length &gt; 0) &#123; return src(&#x27;source/js/*.js&#x27;) .pipe(uglify()) .pipe(dest(&#x27;public/js&#x27;)); &#125; else &#123; return new Promise((resolve) =&gt; &#123; console.log(&#x27;No JS files to minify.&#x27;); resolve(); &#125;); &#125;&#125;// Default taskexports.default = series(minifyCSS, minifyJS); 创建CNAME1blog.sjooo.sbs themes&#x2F;主题&#x2F;创建.gitkeep.gitkeep12mkdir -p themes/*touch themes/*/.gitkeep JSON搜索文件其它插件12npm install hexo-generator-json-content --savenpm install hexo-generator-feed --save 根目录&#x2F;_config.yml1234567891011121314151617181920212223242526272829#JSON搜索文件jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true#RSS订阅feed: type: atom path: atom.xml limit: hub: content: content_limit: content_limit_delim: &#x27; &#x27; order_by: -date 链接配置插件1npm install hexo-abbrlink --save _config.yml1234abbrlink: alg: crc32 # 算法，可选 crc16 和 crc32 rep: hex # 生成的链接形式，可选 dec 和 hexpermalink: posts/:abbrlink.html 创建项目-空文件夹中运行12hexo initnpm install hexo-deployer-git --save 1hexo d -g 运行程序123hexo clhexo ghexo s 第一次123456789hexo clhexo ggit initgit remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add .git commit -m &quot;github action update&quot;git push origin main 出错1234git pull origin maingit add .git commit -m &quot;Merge remote changes&quot;git push origin main 第二次123456git remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add *git commit -m &quot;github action update&quot;git push origin main 强制推送123456git remote rm origingit remote add origin git@github.com:bengenseo/bengenseo.github.io.gitgit checkout -b maingit add *git commit -m &quot;github action update&quot;git push origin main --force","tags":[]},{"title":"Typora使用教程","date":"2024-07-12T11:41:18.051Z","path":"posts/f3d78255.html","text":"Typora使用教程先新建,保存文件再写文档内容步骤 偏好设置","tags":[]},{"title":"wamp升级Mysql8","date":"2024-07-12T11:41:18.051Z","path":"posts/cd32c25d.html","text":"wamp升级Mysql81https://sourceforge.net/projects/wampserver/","tags":[]},{"title":"wampserver配置","date":"2024-07-12T11:41:18.051Z","path":"posts/cf4a77ec.html","text":"wampserver配置修改根目录1、修改wampserver的默认目录安装好wampserver后，网站根目录默认为：安装目录\\wamp\\www，也就是wampserver安装目录下的www文件夹。 我们以更改为:D\\www为例。 打开wamp\\scripts\\config.inc.php 第47行，$wwwDir &#x3D;$c_installDir.’&#x2F;www’;（ $c_installDir是个变量，指WAMPserver安装根目录。） 修改为：$wwwDir &#x3D;’D:&#x2F;www’;即可。 第2步 2、修改Apache默认根目录打开wamp\\bin\\apache\\apache2.2.11\\conf\\httpd.conf,修改DocumentRoot后面双引号中的值为你所要的。 比如将DocumentRoot “C:&#x2F;wamp&#x2F;www&#x2F;” 改成DocumentRoot “D:&#x2F;www&#x2F;” 同时将&lt;Directory “E:&#x2F;wamp&#x2F;www&#x2F;“&gt; 改成&lt;Directory “E:&#x2F;www&#x2F;“&gt; 配置域名hosts路径:1C:\\Windows\\System32\\drivers\\etc\\hosts 文件:12345678910111213141516171819202122232425262728293031323334353637383940414243444546192.168.200.131 start.dnf.tw192.168.10.131 start.dnf.tw127.0.0.1 localhost::1 localhost127.0.0.1 php.com127.0.0.1 demo.com127.0.0.1 demo1.com127.0.0.1 demo2.com127.0.0.1 demo3.com127.0.0.1 demo4.com127.0.0.1 demo5.com127.0.0.1 web.com127.0.0.1 business.com192.168.1.4 a.com127.0.0.1 b.com127.0.0.1 c.com127.0.0.1 d.com127.0.0.1 e.com127.0.0.1 f.com127.0.0.1 g.com127.0.0.1 h.com127.0.0.1 i.com127.0.0.1 j.com127.0.0.1 k.com127.0.0.1 l.com127.0.0.1 m.com127.0.0.1 n.com127.0.0.1 o.com127.0.0.1 p.com127.0.0.1 q.com#配置cmswing的域名127.0.0.1 wing.cms127.0.0.1 www.xmind.net#0.0.0.0 account.jetbrains.com#0.0.0.0 www.jetbrains.com127.0.0.1 activate.navicat.com# Added by Docker Desktop192.168.1.4 host.docker.internal192.168.1.4 gateway.docker.internal# To allow the same kube context to work on the host and the container:127.0.0.1 kubernetes.docker.internal# End of section httpd-vhosts.conf路径1\\wamp64\\bin\\apache\\apache2.4.39\\conf\\extra 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160# Virtual Hosts#&lt;VirtualHost *:80&gt; ServerName localhost ServerAlias localhost DocumentRoot &quot;$&#123;INSTALL_DIR&#125;/www&quot; &lt;Directory &quot;$&#123;INSTALL_DIR&#125;/www/&quot;&gt; Options +Indexes +Includes +FollowSymLinks +MultiViews AllowOverride All Require local &lt;/Directory&gt;&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; ServerName web.com ServerAlias web.com DocumentRoot &quot;C:/body/web&quot; &lt;Directory &quot;C:/body/web&quot;&gt; Options +Indexes +Includes +FollowSymLinks +MultiViews AllowOverride All Require local &lt;/Directory&gt;&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; ServerName php.com ServerAlias php.com DocumentRoot &quot;C:/body/php&quot; &lt;Directory &quot;C:/body/php&quot;&gt; Options +Indexes +Includes +FollowSymLinks +MultiViews AllowOverride All Require local &lt;/Directory&gt;&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo&quot; ServerName demo.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo1&quot; ServerName demo1.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo2&quot; ServerName demo2.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo3&quot; ServerName demo3.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo4&quot; ServerName demo4.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/demo5&quot; ServerName demo5.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/business&quot; ServerName business.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; ServerName 192.168.1.4 ServerAlias 115.218.74.138 DocumentRoot &quot;C:/body/a&quot; &lt;Directory &quot;C:/body/a&quot;&gt; Options +Indexes +Includes +FollowSymLinks +MultiViews AllowOverride All Require all granted &lt;/Directory&gt;&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/b&quot; ServerName b.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/c&quot; ServerName c.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/d&quot; ServerName d.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/e&quot; ServerName e.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/f&quot; ServerName f.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/g&quot; ServerName g.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/h&quot; ServerName h.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/i&quot; ServerName i.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/j&quot; ServerName j.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/k&quot; ServerName k.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/l&quot; ServerName l.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/m&quot; ServerName m.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/n&quot; ServerName n.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/o&quot; ServerName o.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/p&quot; ServerName p.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;C:/body/q&quot; ServerName q.com&lt;/VirtualHost&gt;","tags":[]},{"title":"windows 10 优化教程","date":"2024-07-12T11:41:18.051Z","path":"posts/efb8f57f.html","text":"windows 10 优化教程删除IE快捷键: win+R1regedit 路径1计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\ IE注册表为1&#123;B416D21B-3B22-B6D4-BBD3-BBD452DB3D5B5&#125; 虚拟机VMware首先安装VMware tools工具1导航栏--&gt;虚拟机--&gt;VMware Tools 删除默认7个文件夹路径1计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace 说明12345678910111213&#123;088e3905-0323-4b02-9826-5d99428e115f&#125;→下载文件夹；&#123;0DB7E03F-FC29-4DC6-9020-FF41B59E513A&#125;→3D对象文件夹；&#123;24ad3ad4-a569-4530-98e1-ab02f9417aa8&#125;→图片文件夹；&#123;B4BFCC3A-DB2C-424C-B029-7FE99A87C641&#125;→桌面文件夹；&#123;d3162b92-9365-467a-956b-92703aca08af&#125;→文档文件夹；&#123;f86fa3ab-70d2-4fc7-9c99-fcbf05467f3a&#125;→视频文件夹；&#123;3dfdf296-dbec-4fb4-81d1-6a3438bcf4de&#125;→音乐文件夹； 2.文件一键删除(文件另存为reg格式,否则可能失败)123456789101112131415Windows Registry Editor Version 5.00[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;f86fa3ab-70d2-4fc7-9c99-fcbf05467f3a&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;d3162b92-9365-467a-956b-92703aca08af&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;B4BFCC3A-DB2C-424C-B029-7FE99A87C641&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;3dfdf296-dbec-4fb4-81d1-6a3438bcf4de&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;088e3905-0323-4b02-9826-5d99428e115f&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;0DB7E03F-FC29-4DC6-9020-FF41B59E513A&#125;][-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;24ad3ad4-a569-4530-98e1-ab02f9417aa8&#125;] 弹出一个对话框,点击–&gt;是运行文件Windows 10登录或登录屏幕背景图片默认为模糊一.开启透明效果1桌面空白处--&gt;右键--&gt;个性化--&gt;颜色--&gt;透明效果 二.通过组策略禁用登录屏幕模糊12345671、在“开始/任务栏搜索”字段中键入“编辑组策略”，然后按Enter键，打开“组策略编辑器” 。2、导航至：计算机配置 &gt; 管理模板 &gt; 系统 &gt; 登录3、在右侧，查找“显示清楚的登录背景”，双击它以打开其属性。4、选择“已启用”选项，然后单击“应用”按钮关闭登录屏幕背景图片中的模糊效果并显示清晰的图片。 三.通过注册表开启登录屏幕模糊步骤1在开始/任务栏搜索栏中键入“注册表编辑”，然后按回车键，当你获得用户帐户控制屏幕以启动注册表编辑器时，请单击“是”按钮。 路径1计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\LogonUI\\TestHooks 数值1234561.如果没有二进制2.创建名称为DisableAcrylicBackgroundOnLogon3.数值 0为打开模糊 1为关闭模糊 Windows 10任务栏完全透明注意:个性化-颜色-以下区域主题颜色(不能打勾)一.Windows+R打开运行，输入regedit回车打开注册表。二.路径 1计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced 三.手动添加一个（类型为DWORD）命名为1TaskbarAcrylicOpacity 赋值0四.重启文件资源管理器生效五.毛玻璃的修复教程1桌面-鼠标右键-个性化-颜色-将“选择颜色”的浅色切换成深色(或将深色切换成浅色再切换成深色)-透明效果开启(或关闭后开启), 即可 Win10系统频繁弹出在Microsoft Store中查应用怎么解决？1234567891011 1、首先，按Win+R组合快捷键，在打开的运行窗口中输入regedit，点击确定或按回车即可; 2、然后，在进入注册表编辑器，定位到： HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer。 注：如果没有Explorer这项的话，就新建一个; 3、在其右侧新建个名为 NoUseStoreOpenWith 的DWORD（32位）值，把数值数据设置成1，最后再点击确定保存设置即可。 恢复默认DNS：打开命令提示符或 Windows PowerShell，键入ipconfig &#x2F;flushdns，然后按 Enter。","tags":[]},{"title":"先配置镜像源","date":"2024-07-12T11:41:18.051Z","path":"posts/b1715ee3.html","text":"windows设置镜像源 路径C:\\Users\\知否 创建pip文件夹下pip.ini 123456[global]index-url=https://mirrors.aliyun.com/pypi/simple/timeout = 6000[install]trusted-host=mirrors.aliyun.comdisable-pip-version-check = true Linux设置镜像源123456789mkdir ~/.pipvim ~/.pip/pip.conf [global]index-url=https://mirrors.aliyun.com/pypi/simple/timeout = 6000[install]trusted-host=mirrors.aliyun.comdisable-pip-version-check = true 镜像源12https://pypi.tuna.tsinghua.edu.cn/simplehttps://mirrors.aliyun.com/pypi/simple/","tags":[]},{"title":"安装Docker-Compose","date":"2024-07-12T11:41:18.051Z","path":"posts/4837b3f.html","text":"安装Docker-Compose清空cmd行1clear 安装Pythonhttps://blog.csdn.net/weixin_44874451/article/details/128363789 123#添加软连接sudo ln -s /usr/local/bin/python39sudo ln -s /usr/local/bin/python39/bin/pip3 1cd root/.virtualenvs/blog/bin/activate linux删除文件1234#删除文件rm -fr 文件名#查看所有,包括隐藏文件ls -a 1.安装1234567891011# 下载安装包curl -SL https://github.com/docker/compose/releases/download/v2.19.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose# 国内速度慢--&gt;可替换链接https://get.daocloud.iosudo curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose # 设置权限，应用可执行权限sudo chmod +x /usr/local/bin/docker-compose# 添加软连接sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose# 查看安装信息docker-compose --version 或2.pip安装1234567# 1. 安装python-pipyum -y install epel-releaseyum -y install python-pip# 2. 安装docker-composepip install docker-compose# 3. 待安装完成后，执行查询版本的命令，即可安装docker-composedocker-compose version yml文件1234567891011121314151617181920212223242526272829303132333435363738394041version: &quot;3.8&quot;services: web: build: . volumes: - .:/django/blog ports: - 80:80 image: web:django container_name: blog_container command: python manage.py runserver 0.0.0.0:80 networks: - proxy mysql: image: mysql:8.0 restart: always #出现错误就重启 container_name: mysql privileged: true #root外部只是个普通用户 environment: #MYSQL_ROOT_PASSWORD: root#超级管理员 MYSQL_DATABASE: blog #数据库名 #自定义数据库的用户 MYSQL_USER: blog MYSQL_PASSWORD: secret command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1 --max_allowed_packet=128M; ports: - 3306:3306 volumes: - /usr/local/bin/mysql:/var/lib/mysql - /etc/localtime:/etc/localtime:ronetworks: proxy: #external: #参考外部 name: blog_network 删除宿主机文件1rm -rf /usr/local/bin/mysql 常用指令123456789101112# 后台启动sudo docker compose up -d#精灵线程 检测yml文件docker compose up -d --build# 删除sudo docker-compose down# 查询容器列表sudo docker-compose ps# 查询日志 (查询所有日志，可以辅助排查个别容器启动失败问题)sudo docker-compose logs# 查看版本sudo docker-compose version 卸载12# 卸载数据sudo rm /usr/local/bin/docker-compose","tags":[]}]